// <auto-generated />
using System;
using Gestor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gestor.Migrations
{
    [DbContext(typeof(GestorContext))]
    partial class GestorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gestor.Modelos.CostoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Costo")
                        .HasColumnType("double precision");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("eliminado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("CostoMaterial");
                });

            modelBuilder.Entity("Gestor.Modelos.Ingresos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("borrado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("forma_venta")
                        .HasColumnType("text");

                    b.Property<int?>("productoVendidoId")
                        .HasColumnType("integer");

                    b.Property<int>("valor_entrega")
                        .HasColumnType("integer");

                    b.Property<bool?>("valor_fijo")
                        .HasColumnType("boolean");

                    b.Property<int>("valor_hora")
                        .HasColumnType("integer");

                    b.Property<int?>("valor_venta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("productoVendidoId");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("Gestor.Modelos.MaterialProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("costoMaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("productoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("costoMaterialId");

                    b.HasIndex("productoId");

                    b.ToTable("MaterialProducto");
                });

            modelBuilder.Entity("Gestor.Modelos.Patron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.Property<bool>("eliminado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("parte")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("productoId")
                        .HasColumnType("integer");

                    b.Property<string>("punto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("repeticiones")
                        .HasColumnType("integer");

                    b.Property<int>("vuelta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("productoId");

                    b.ToTable("Patron");
                });

            modelBuilder.Entity("Gestor.Modelos.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tamanio")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("imgPrincipal")
                        .HasColumnType("text")
                        .HasColumnName("path_img_principal");

                    b.Property<string>("imgSecundaria")
                        .HasColumnType("text")
                        .HasColumnName("path_img_secundaria");

                    b.Property<string>("imgTerciaria")
                        .HasColumnType("text")
                        .HasColumnName("path_img_terciaria");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Gestor.Modelos.Tipo_punto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Tipo_punto");
                });

            modelBuilder.Entity("Gestor.Modelos.Ingresos", b =>
                {
                    b.HasOne("Gestor.Modelos.Producto", "productoVendido")
                        .WithMany()
                        .HasForeignKey("productoVendidoId");

                    b.Navigation("productoVendido");
                });

            modelBuilder.Entity("Gestor.Modelos.MaterialProducto", b =>
                {
                    b.HasOne("Gestor.Modelos.CostoMaterial", "costoMaterial")
                        .WithMany()
                        .HasForeignKey("costoMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestor.Modelos.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("costoMaterial");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("Gestor.Modelos.Patron", b =>
                {
                    b.HasOne("Gestor.Modelos.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });
#pragma warning restore 612, 618
        }
    }
}
